import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

iris_df = pd.read_csv('Iris.csv')

features = iris_df.iloc[:, :-1].values
target = iris_df.iloc[:, -1].values

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()
target_encoded = label_encoder.fit_transform(target)

scaler = StandardScaler()
features_std = scaler.fit_transform(features)

lda_model = LinearDiscriminantAnalysis(n_components=2)
features_lda = lda_model.fit_transform(features_std, target_encoded)

pca_model = PCA(n_components=2)
features_pca = pca_model.fit_transform(features_std)

plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
for i, class_name in zip(range(len(label_encoder.classes_)), label_encoder.classes_):
    plt.scatter(features_lda[target_encoded == i, 0], features_lda[target_encoded == i, 1], label=class_name)
plt.title('LDA: Iris dataset')
plt.xlabel('LD1')
plt.ylabel('LD2')
plt.legend()

plt.subplot(1, 2, 2)
for i, class_name in zip(range(len(label_encoder.classes_)), label_encoder.classes_):
    plt.scatter(features_pca[target_encoded == i, 0], features_pca[target_encoded == i, 1], label=class_name)
plt.title('PCA: Iris dataset')
plt.xlabel('PC1')
plt.ylabel('PC2')
plt.legend()

plt.tight_layout()
plt.show()
